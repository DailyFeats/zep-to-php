#!/bin/bash

# --------------------------------------------------------------------------
# ZEP to PHP Translator                                                    
# --------------------------------------------------------------------------
# Copyright (c) 2015 pf at sourcenotes.org                                 
# --------------------------------------------------------------------------
# This source file is subject the MIT license, that is bundled with        
# this package in the file LICENSE, and is available through the           
# world-wide-web at the following url: https://opensource.org/licenses/MIT                                      
# --------------------------------------------------------------------------

# Get the Scripts Working Directory
CWD="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

#
# Validate Base Requirements
#
type re2c >/dev/null 2>&1
if [[ $? != 0 ]]; then
  echo "ERROR: re2c is not installed"
  exit 1
fi

# Make Build Output Directory
BIN="$CWD/bin"
if [ ! -d "$BIN" ]; then
  # Create Bin Directory
  mkdir -p "$BIN"
fi

# Create/Clean Build Directory
BUILD="$CWD/build"
# Does the Build Directory Exist?
if [ ! -d "${BUILD}" ]; then # NO: Create
  mkdir -p "${BUILD}"
else # YES: Clean 
  cd "${BUILD}"
  find . -delete
fi

# Create ZEP Parser Build Directory
ZEPBUILD="$CWD/build/zep-parser"
mkdir -p "$ZEPBUILD"

#
# BUILD ZEP Parser
#

# ZEPHIR Root
ZEPHIRROOT="${CWD}/externals/zephir"

git clone https://github.com/zephir-lang/zephir.git "$ZEPHIRROOT"
cd "$ZEPHIRROOT"
git checkout 3386a95bedd1e27e0cef0683e1e91224089aebac
cd "$CWD"

# Copy Parser Files
cp "${ZEPHIRROOT}/parser/"{xx.h,lemon.c,lempar.c,parser.lemon,base.c,scanner.re,scanner.h} "${ZEPBUILD}"

# Change into ZEP Parser Source Directory
cd "$ZEPBUILD"

# Compile lemon
gcc -w lemon.c -o lemon

# Generate Parser
re2c -o scanner.c scanner.re && ./lemon -s parser.lemon && cat base.c >> parser.c

# Was parser built?
if [ ! -f parser.c ]; then # NO
  echo "ERROR: failed to produce parser"
  exit 2
fi
sed s/"\#line"/"\/\/"/g scanner.c > xx && mv -f xx scanner.c
sed s/"#line"/"\/\/"/g parser.c > xx && mv -f xx parser.c

# Compile Parser
gcc -Wl,-rpath /usr/local/lib -I/usr/local/include -L/usr/local/lib -L/opt/local/lib -g3 -O0 -w parser.c scanner.c -ljson-c -o "$BIN/zephir-parser"

# Reset Working Directory
cd "$CWD"

# Install to ~/bin
sed "s#%ZEPTOPHP%#${CWD}#g" ./zeptophp.sh > "${BIN}/zeptophp"
chmod 755 "${BIN}/zeptophp"

# Did we run install?
if [ ! -d ~/bin ]; then # NO: Display Error
  echo "ERROR: ~/bin directory does not exist"
  echo "You can still run the command using: ${BIN}/zeptophp"
  exit 3
fi

# Do we have an existing symlink?
if [ -f ~/bin/zeptophp ]; then # YES: Remove it
  rm ~/bin/zeptophp
fi

ln -s "${BIN}/zeptophp" ~/bin/zeptophp

# Do we want to run a test?
options='t'
while getopts $options option
do
  if [[ "$option" == "t" ]]; then # YES
    # Create Output Directories for Run on ZEPHIR test
    mkdir "${BUILD}/"{cache,tmp,test}
    zeptophp -c "${BUILD}/cache" -t "${BUILD}/tmp" -o "${BUILD}/test" "${ZEPHIRROOT}/test"
    exit 0
  fi
done
